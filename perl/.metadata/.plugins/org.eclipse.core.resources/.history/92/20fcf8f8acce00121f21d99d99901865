#!/usr/bin/perl
use strict;
use warnings;
use Getopt::Long;

my $raf_file;
my $targets_file;
my $output_file;

my $help;
usage() if ( @ARGV < 1 || ! GetOptions('help|?' => \$help,  'target=s' => \$targets_file, 'output=s' => \$output_file) || defined $help );
print "##############################################################################\n";
print "WARNING: Please ensure enough RAM if process large VCF files\n";
#print "WARNING: Please ensure the chromosome names in VCFs are consistant and has no \"chr\" in front.\n";
print "##############################################################################\n";
#get the target region
my %Targetregions;
open (TARGET, $targets_file) || die "Target file not found: $targets_file\n";
while (<TARGET>) {
	chomp($_);
	my @targsplit = split(/\t/, $_);
	my $chr = $targsplit[0];
	my $start= $targsplit[1];
	my $end = $targsplit[2];
	$Targetregions{$chr}{$start}{$end} = 1; 
}
close TARGET;

#get the VCF files
my @vcfs=split(',', $vcf_files);
VCF_LOOP: foreach my $vcf (@vcfs) {
	print "Reading vcf file: $vcf\n";
	my @sample_select_index;
	open VCF, $vcf or die "Cannot open the vcf file $vcf\n";
	LINE_LOOP: while (my $line = <VCF> ) {
		if ($line =~ /^\#CHROM/) {
			chomp $line;
			my @words = split (/\t/, $line);
			if (@samples_select) {
				for (my $i=0;$i<scalar @words;$i++) {
					for (my $j=0;$j<scalar @samples_select;$j++) {
						if( $words[$i] eq $samples_select[$j]) {
							print "Sample: ".$words[$i]." is found in the vcf. \n";
							push @sample_select_index, $i;
						}
					}
				}
			} else {
				for (my $i=9;$i<scalar @words;$i++) {
					push @sample_select_index, $i;
				}
			}
			if ( $sample_names ne "" && !@sample_select_index) {
				print "The vcf file $vcf does not have sample info required, ignored.\n";
				next VCF_LOOP;
			} 
		} else {
			chomp $line;
			my @words = split (/\t/, $line);
			if ($words[6] ne "PASS") { # only variants that passed the filter
				next LINE_LOOP;
			}
			
			# no way to handle indels
			# shall we only include SNPs
			if ($words[3] =~ m/^(A|T|G|C)$/i) {
				my @vars = split(",", $words[4]);
				if (scalar @vars > 1) { # Consider ONLY SNPs
					for (my $i=0;$i<scalar @vars;$i++) {
						if ($vars[$i] !~ m/^(A|T|G|C)$/i ) {
							next LINE_LOOP;
						}
					}
				}
				# compare the ref base to the reference
				my ($chr, $pos, $ref);
				if ($words[0] =~ m/MT/) { ###################could be different on different sets
					$chr="chrM";
				} else {
					$chr="chr".$words[0];
				}
				$pos = $words[1];
				$ref = $words[3];
				if ($ref eq substr($hg19{$chr}, $pos-1, 1)) {
					##############################start to count frequency of samples
					my $format = $words[8];
					my @temp_2 = split (":", $format);
					
					
					my @frequencies;
					foreach my $index (@sample_select_index) {
						my ($ref_count, $total_count,$quality);
						my @temp_2 = split (":", )
					}
				} else {
					next LINE_LOOP;
				}
				
			}
			
		}
		
	} 
	
}
#choose which sample to use and get the column number
	# use sample names compare to the column names
#process VCF add Frequency of Ref and Var together
	#if the position is on target region
	#if the ref is the same as reference
	#if the var is the same as reference
	#add % ref frequency together and find the mean
#output table


sub usage {
    print "Unknown option: @_\n" if ( @_ );
    print "\nusage: ProduceRefSet4SensAndSpec.pl [--target /Path/to/target_region.bed] [--output /Path/to/output.txt] [--help|-?]\n\n";
	return(1);
}