#!/usr/bin/perl 
use strict;
use warnings;
#use Statistics::Lite;

### This script calculates information relating to the alignment to and coverage of target co-ordinates from alignment files generated by the program bowtie with the samtools option --sam specified
### Coverage information is calculated per target region instead of per base. This was done to reduce computational time and the subsequent size of files for loading into statistical packages and graph drawing
### It would be very straightforward to ammend the CalculateTargetCoverage subroutine to output all bases instead of calculating summary statistics as is currently done
### The script saves time and memory by not reading large files into the memory. In order for this to work all files must be in ascending order of alignment. This is done within the script for alignment files,
### however, all target files should be already in ascending order (I have a script for this too if you need it)

##this is a scipt created from Katherine Siddle's.



#my $Targets = "TargetFiles/CCDSExonCoordinates_nonOV.txt"; # this should be comma separated and in ascending order. I also chose to combine overlapping targets.

my $lanes = "234";
my $currentDir = 'pwd';


my $samFile = "/home/data/yaobo/"."s".$lanes."_bowtie_best_hg18.sam";

#CalculateOnTargetReads ($samfile, $Targets); # this sub needs to be replaced. I could use my own modlules to do it.

my $indexedSortedBamFile = GetIndexedBamFile ($samFile);
my $pileupFile = GeneratePileupFile ($indexedSortedBamFile);

print $pileupFile." for ".$samFile." has been generated!\n";

#my $output = "Run2_Lane".$lane."_CoverageStats_CCDS";
#CalculateTargetCoverage ($PileupFile, $output, $Targets);


exit;

#### Sub-routines #####
sub GetIndexedBamFile { # Uses samtools to generate indexed bam files from sam alignment outputs
        my ($samFile) = @_;
        my $bamFile = $samFile.".bam";
        my $sortedBamFile = $bamFile.".sorted";
        my $indexedSortedBamFile = $sortedBamFile.".indexed";

        `samtools import /home/data/AllChromosomes/hg18.fa.fai $samFile $bamFile`;
        `samtools sort $bamFile $sortedBamFile`;
        `samtools index $sortedBamFile > $indexedSortedBamFile`;

        return($indexedSortedBamFile);
}


sub GeneratePileupFile { # Uses the indexed bam file from GetIndexedBamFile to build a pileup file
        my ($indexedSortedBamFile) = @_;
        my $pileupFile = $indexedSortedBamFile.".pileup";

        `samtools pileup -f /home/data/AllChromosomes/hg18.fa $indexedSortedBamFile > $pileupFile`;

        return($pileupFile);
}